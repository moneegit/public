{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "location"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "FortiGateNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Name for FortiGate virtual appliances (A & B will be appended to the end of each respectively)."
            }
        },
        "FortiGateImageSKU": {
            "type": "string",
            "defaultValue": "fortinet_fg-vm_payg_20190624",
            "allowedValues": [
                "fortinet_fg-vm",
                "fortinet_fg-vm_payg_20190624"
            ],
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
            }
        },
        "FortiGateImageVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "Select image version."
            }
        },
        "instanceType": {
            "type": "string",
            "defaultValue": "Standard_F8s_v2",
            "metadata": {
                "description": "Virtual Machine size selection"
            }
        },
        "publicIPNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identify if to use a public IP, and if so whether it's new"
            }
        },
        "publicIP2NewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Whether to use a public IP and if so whether it is new"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of Public IP address element."
            }
        },
        "publicIPAddressResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group to which the Public IP belongs."
            }
        },
        "publicIPAddress2Name": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of Public IP address element."
            }
        },
        "publicIPAddress2ResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group to which the Public IP belongs."
            }
        },
        "publicIP1sku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard"
            ],
            "metadata": {
                "description": "Standard public IPs are newer and required for new Azure load balancers"
            }
        },
        "publicIP2sku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard"
            ],
            "metadata": {
                "description": "Standard public IPs are newer and required for new Azure load balancers"
            }
        },
        "publicIP1AllocationMethod": {
            "type": "string",
            "defaultValue": "Static",
            "allowedValues": [
                "Static"
            ],
            "metadata": {
                "description": "Dynamic public IPs change on reboot"
            }
        },
        "publicIP2AllocationMethod": {
            "type": "string",
            "defaultValue": "Static",
            "allowedValues": [
                "Static"
            ],
            "metadata": {
                "description": "Dynamic public IPs change on reboot"
            }
        },
        "vnetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure virtual network."
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
            }
        },
        "vnetAddressPrefixes": {
            "type": "array",
            "defaultValue": [
                "10.0.0.0/16"
            ],
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "Subnet1Name": {
            "type": "string",
            "defaultValue": "EntrySubnet",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "Subnet1Prefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "Subnet2Name": {
            "type": "string",
            "defaultValue": "TransitSubnet",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "Subnet2Prefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "Subnet3Name": {
            "type": "string",
            "defaultValue": "ProtectedSubnet",
            "metadata": {
                "description": "Subnet 3 Name"
            }
        },
        "Subnet3Prefix": {
            "type": "string",
            "defaultValue": "10.0.3.0/24",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "FortinetTags": {
            "type": "object",
            "defaultValue": {
                "provider": "6EB3B02F-50E5-4A3E-8CB8-2E129258317D"
            }
        },
        "artifactsBaseUrl": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "Base URL of the solution template gallery package"
            }
        },
        "AcceleratedNetworking": {
            "type": "bool",
            "defaultValue": false
        }
    },
    "variables": {
        "compute_AvailabilitySet_FG_Name": "[concat(parameters('FortiGateNamePrefix'),'-AvailabilitySet')]",
        "compute_AvailabilitySet_FG_Id": "[resourceId('Microsoft.Compute/availabilitySets', variables('compute_AvailabilitySet_FG_Name'))]",
        "vnetAddressPrefix": "[string(parameters('vnetAddressPrefixes')[0])]",
        "subnet1Ref": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('Subnet1Name'))]",
        "subnet2Ref": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('Subnet2Name'))]",
        "vmName": "[concat(parameters('FortiGateNamePrefix'),'-A')]",
        "vm2Name": "[concat(parameters('FortiGateNamePrefix'),'-B')]",
        "routeTable2Name": "[concat(parameters('Subnet2Name'),'-',parameters('FortiGateNamePrefix'),'RouteTable')]",
        "internalLBName": "[concat(parameters('FortiGateNamePrefix'),'-InternalLoadBalancer')]",
        "internalLBFE2Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',parameters('Subnet2Name'),'-FrontEnd')]",
        "internalLBBE2Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',parameters('Subnet2Name'),'-BackEnd')]",
        "internalLBid": "[resourceID('Microsoft.Network/loadBalancers',variables('internalLBName'))]",
        "internalLB_BE2Id": "[concat(variables('internalLBid'),'/backendAddressPools/',variables('internalLBBE2Name'))]",
        "compute_VM_fg1_Name": "[variables('vmName')]",
        "compute_VM_fg2_Name": "[variables('vm2Name')]",
        "network_NIC_fg11_Name": "[concat(variables('vmName'),'Nic0')]",
        "network_NIC_fg11_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg11_Name'))]",
        "network_NIC_fg12_Name": "[concat(variables('vmName'),'Nic1')]",
        "network_NIC_fg12_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg12_Name'))]",
        "network_NIC_fg21_Name": "[concat(variables('vm2Name'),'Nic0')]",
        "network_NIC_fg21_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg21_Name'))]",
        "network_NIC_fg22_Name": "[concat(variables('vm2Name'),'Nic1')]",
        "network_NIC_fg22_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg22_Name'))]",
        "publicIPID": "[resourceID(parameters('publicIPAddressResourceGroup'),'Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
        "publicIP2ID": "[resourceID(parameters('publicIPAddress2ResourceGroup'),'Microsoft.Network/publicIPAddresses',parameters('publicIPAddress2Name'))]",
        "NSGName": "[concat(parameters('FortiGateNamePrefix'),'-',uniqueString(resourceGroup().id),'-NSG')]",
        "sn1IPArray": "[split(parameters('Subnet1Prefix'),'.')]",
        "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
        "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'),'/')]",
        "sn1CIDRmask": "[string(int(variables('sn1IPArray2nd')[1]))]",
        "sn1IPArray3": "[string(add(int(variables('sn1IPArray2nd')[0]),1))]",
        "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
        "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
        "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
        "sn1GatewayIP": "[concat(variables('sn1IPArray0'),'.',variables('sn1IPArray1'),'.',variables('sn1IPArray2'),'.',variables('sn1IPArray3'))]",
        "sn2IPArray": "[split(parameters('Subnet2Prefix'),'.')]",
        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'),'/')]",
        "sn2CIDRmask": "[string(int(variables('sn2IPArray2nd')[1]))]",
        "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]),1))]",
        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
        "sn2GatewayIP": "[concat(variables('sn2IPArray0'),'.',variables('sn2IPArray1'),'.',variables('sn2IPArray2'),'.',variables('sn2IPArray3'))]",
        "network_LB_Public_NatRule_FGAdminPerm_fg1_Name": "[concat(variables('VMName'),'FGAdminPerm')]",
        "network_LB_Public_NatRule_FGAdminPerm_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Name'))]",
        "network_LB_Public_NatRule_SSH_fg1_Name": "[concat(variables('VMName'),'SSH')]",
        "network_LB_Public_NatRule_SSH_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_SSH_fg1_Name'))]",
        "network_LB_Public_NatRule_FGAdminPerm_fg2_Name": "[concat(variables('VM2Name'),'FGAdminPerm')]",
        "network_LB_Public_NatRule_FGAdminPerm_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminPerm_fg2_Name'))]",
        "network_LB_Public_NatRule_SSH_fg2_Name": "[concat(variables('VM2Name'),'SSH')]",
        "network_LB_Public_NatRule_SSH_fg2_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_SSH_fg2_Name'))]",
        "network_LB_Public_Name": "[concat(parameters('FortiGateNamePrefix'),'-publicLoadBalancer')]",
        "network_LB_Public_Id": "[resourceId('Microsoft.Network/loadBalancers',variables('network_LB_Public_Name'))]",
        "network_LB_Public_FEName": "[concat(parameters('FortiGateNamePrefix'),'publicLBFE')]",
        "network_LB_Public_FEId": "[concat(variables('network_LB_Public_Id'),'/frontendIPConfigurations/',variables('network_LB_Public_FEName'))]",
        "network_LB_Public_FE2Name": "[concat(parameters('FortiGateNamePrefix'),'publicLBFE2')]",
        "network_LB_Public_FE2Id": "[concat(variables('network_LB_Public_Id'),'/frontendIPConfigurations/',variables('network_LB_Public_FE2Name'))]",
        "network_LB_Public_BEName": "[concat(parameters('FortiGateNamePrefix'),'publicLBBE')]",
        "network_LB_Public_BEId": "[concat(variables('network_LB_Public_Id'),'/backendAddressPools/',variables('network_LB_Public_BEName'))]",
        "updateIPURI": "[uri(parameters('artifactsBaseUrl'),'update-nic.json')]",
        "updateIP2URI": "[uri(parameters('artifactsBaseUrl'),'update-nic2.json')]"
    },
    "resources": [
        {
            "apiVersion": "2018-02-01",
            "name": "pid-09ed3dc3-4cf7-5410-b01c-c9bdfc039530",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deplymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('compute_AvailabilitySet_FG_Name')]",
            "apiVersion": "2017-03-30",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-02-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('vnetAddressPrefixes')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('Subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet3Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('internalLBName')]",
            "apiVersion": "2018-02-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[parameters('vnetName')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('internalLBFE2Name')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('internalLBBE2Name')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFE2Name'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/backendAddressPools/', variables('internalLBBE2Name'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalLBName')), '/probes/lbprobe')]"
                            },
                            "protocol": "all",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "lbruleFE2all"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8008,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTable2Name')]",
            "apiVersion": "2018-02-01",
            "dependsOn": [
                "[variables('internalLBName')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "location": "[parameters('location')]",
            "properties": {
                "routes": [
                    {
                        "name": "toDefault",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIPAddress": "[reference(concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))).frontendIPConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                ],
                "subnets": [
                    {
                        "id": "[variables('subnet2Ref')]"
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-02-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('NSGName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInbound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[equals(parameters('publicIPNewOrExisting'), 'new')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-02-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "name": "[parameters('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('publicIP1sku')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIP1AllocationMethod')]"
            }
        },
        {
            "condition": "[equals(parameters('publicIP2NewOrExisting'), 'new')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-02-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "name": "[parameters('publicIPAddress2Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('publicIP2sku')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIP2AllocationMethod')]"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('network_LB_Public_Name')]",
            "apiVersion": "2018-02-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[variables('publicIPID')]",
                "[variables('publicIP2ID')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('network_LB_Public_FEName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPID')]"
                            }
                        }
                    },
                    {
                        "name": "[variables('network_LB_Public_FE2Name')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIP2ID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('network_LB_Public_BEName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/frontendIpConfigurations/', variables('network_LB_Public_FEName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/backendAddressPools/', variables('network_LB_Public_BEName'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "PublicLBRule-FE1-http"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/frontendIpConfigurations/', variables('network_LB_Public_FE2Name'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/backendAddressPools/', variables('network_LB_Public_BEName'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "PublicLBRule-FE2-http"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/frontendIpConfigurations/', variables('network_LB_Public_FEName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/backendAddressPools/', variables('network_LB_Public_BEName'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('network_LB_Public_Name')), '/probes/lbprobe')]"
                            },
                            "protocol": "Udp",
                            "frontendPort": 10551,
                            "backendPort": 10551,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "PublicLBRule-FE1-udp10551"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('network_LB_Public_NatRule_SSH_fg1_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('network_LB_Public_NatRule_SSH_fg2_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FE2Id')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg2_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FE2Id')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8008,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-04-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fg11_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('network_LB_Public_Id')]",
                "[parameters('vnetName')]",
                "[variables('NSGName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('network_LB_Public_BEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('network_LB_Public_NatRule_SSH_fg1_Id')]"
                                },
                                {
                                    "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Id')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('AcceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('NSGName'))]"
                }
            }
        },
        {
            "apiVersion": "2019-04-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fg21_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('network_LB_Public_Id')]",
                "[variables('network_NIC_fg11_Name')]",
                "[parameters('vnetName')]",
                "[variables('NSGName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('network_LB_Public_BEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('network_LB_Public_NatRule_SSH_fg2_Id')]"
                                },
                                {
                                    "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg2_Id')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('AcceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('NSGName'))]"
                }
            }
        },
        {
            "apiVersion": "2019-04-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fg12_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('internalLB_BE2Id')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('AcceleratedNetworking')]"
            }
        },
        {
            "apiVersion": "2019-04-01",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fg22_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
                "[parameters('vnetName')]",
                "[variables('network_NIC_fg12_Name')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('internalLB_BE2Id')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('AcceleratedNetworking')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "UpdateNIC1",
            "apiVersion": "2018-02-01",
            "dependsOn": [
                "[variables('network_NIC_fg11_Name')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('updateIPURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('network_NIC_fg11_Name')]"
                    },
                    "SubnetRef": {
                        "value": "[variables('subnet1Ref')]"
                    },
                    "privateIp": {
                        "value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg11_Name'))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "BEPool": {
                        "value": "[variables('network_LB_Public_BEId')]"
                    },
                    "NATRules": {
                        "value": [
                            {
                                "id": "[variables('network_LB_Public_NatRule_SSH_fg1_Id')]"
                            },
                            {
                                "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Id')]"
                            }
                        ]
                    },
                    "FortinetTags": {
                        "value": "[parameters('FortinetTags')]"
                    },
                    "NSGName": {
                        "value": "[variables('NSGName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "acceleratedNetwork": {
                        "value": "[parameters('AcceleratedNetworking')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "UpdateNIC1.2",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('network_NIC_fg12_Name')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('updateIP2URI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('network_NIC_fg12_Name')]"
                    },
                    "SubnetRef": {
                        "value": "[variables('subnet2Ref')]"
                    },
                    "privateIp": {
                        "value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg12_Name'))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "BEPool": {
                        "value": "[variables('internalLB_BE2Id')]"
                    },
                    "FortinetTags": {
                        "value": "[parameters('FortinetTags')]"
                    },
                    "NSGName": {
                        "value": "[variables('NSGName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "acceleratedNetwork": {
                        "value": "[parameters('AcceleratedNetworking')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "UpdateNIC2",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('network_NIC_fg21_Name')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('updateIPURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('network_NIC_fg21_Name')]"
                    },
                    "SubnetRef": {
                        "value": "[variables('subnet1Ref')]"
                    },
                    "privateIp": {
                        "value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg21_Name'))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "BEPool": {
                        "value": "[variables('network_LB_Public_BEId')]"
                    },
                    "NATRules": {
                        "value": [
                            {
                                "id": "[variables('network_LB_Public_NatRule_SSH_fg2_Id')]"
                            },
                            {
                                "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg2_Id')]"
                            }
                        ]
                    },
                    "FortinetTags": {
                        "value": "[parameters('FortinetTags')]"
                    },
                    "NSGName": {
                        "value": "[variables('NSGName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "acceleratedNetwork": {
                        "value": "[parameters('AcceleratedNetworking')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "UpdateNIC2.2",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('network_NIC_fg22_Name')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('updateIP2URI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('network_NIC_fg22_Name')]"
                    },
                    "SubnetRef": {
                        "value": "[variables('subnet2Ref')]"
                    },
                    "privateIp": {
                        "value": "[reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg22_Name'))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "BEPool": {
                        "value": "[variables('internalLB_BE2Id')]"
                    },
                    "FortinetTags": {
                        "value": "[parameters('FortinetTags')]"
                    },
                    "NSGName": {
                        "value": "[variables('NSGName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "acceleratedNetwork": {
                        "value": "[parameters('AcceleratedNetworking')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('compute_VM_fg1_Name')]",
            "apiVersion": "2017-03-30",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "location": "[parameters('location')]",
            "plan": {
                "name": "[parameters('FortiGateImageSKU')]",
                "publisher": "fortinet",
                "product": "fortinet_fortigate-vm_v5"
            },
            "dependsOn": [
                "UpdateNIC1",
                "[variables('network_NIC_fg12_Name')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": {
                    "id": "[variables('compute_AvailabilitySet_FG_Id')]"
                },
                "osProfile": {
                    "computerName": "[variables('compute_VM_fg1_Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(concat('config system probe-response\n set mode http-probe\n end\n config router static\n edit 1\n set gateway ', variables('sn1GatewayIP'), '\n set device port1\n next\n edit 2\n set dst ', variables('vnetAddressPrefix'), '\n set gateway ', variables('sn2GatewayIP'), '\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway ', variables ('sn2GatewayIP'), '\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway ', variables ('sn1GatewayIP'), '\n next\n end\n config system interface\n edit port1\n set mode static\n set ip ', reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg11_Name'))).ipConfigurations[0].properties.privateIPAddress, '/', variables('sn1CIDRmask'), '\n set description external\n append allowaccess probe-response\n next\n edit port2\n set mode static\n set ip ', reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg12_Name'))).ipConfigurations[0].properties.privateIPAddress, '/', variables('sn2CIDRmask'), '\n set description internal\n  set allowaccess ping probe-response\n next\n end\n config sys admin\n edit admin\n set password ', parameters('adminPassword'), '\n next\n end\n config sys auto-scale\n set stat enable\n set role master\n set sync-int port2\n set psksecret ', parameters('adminPassword'), '\n end\n'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "fortinet",
                        "offer": "fortinet_fortigate-vm_v5",
                        "sku": "[parameters('FortiGateImageSKU')]",
                        "version": "[parameters('FortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('network_NIC_fg11_Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('network_NIC_fg12_Id')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('compute_VM_fg2_Name')]",
            "apiVersion": "2017-03-30",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "location": "[parameters('location')]",
            "plan": {
                "name": "[parameters('FortiGateImageSKU')]",
                "publisher": "fortinet",
                "product": "fortinet_fortigate-vm_v5"
            },
            "dependsOn": [
                "UpdateNIC2",
                "[variables('network_NIC_fg22_Name')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": {
                    "id": "[variables('compute_AvailabilitySet_FG_Id')]"
                },
                "osProfile": {
                    "computerName": "[variables('compute_VM_fg2_Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(concat('config system probe-response\n set mode http-probe\n end\n config router static\n edit 1\n set gateway ', variables('sn1GatewayIP'), '\n set device port1\n next\n edit 2\n set dst ', variables('vnetAddressPrefix'), '\n set gateway ', variables('sn2GatewayIP'), '\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway ', variables ('sn2GatewayIP'), '\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway ', variables ('sn1GatewayIP'), '\n next\n end\n config system interface\n edit port1\n set mode static\n set ip ', reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg21_Name'))).ipConfigurations[0].properties.privateIPAddress, '/', variables('sn1CIDRmask'), '\n set description external\n append allowaccess probe-response\n next\n edit port2\n set mode static\n set ip ', reference(concat('Microsoft.Network/networkInterfaces/', variables('network_NIC_fg22_Name'))).ipConfigurations[0].properties.privateIPAddress, '/', variables('sn2CIDRmask'), '\n set description internal\n set allowaccess ping probe-response\n next\n end\n config sys admin\n edit admin\n set password ', parameters('adminPassword'), '\n next\n end\n config sys auto-scale\n set status enable\n set master-ip ', reference(concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg12_Name'))).ipConfigurations[0].properties.privateIPAddress, ' \n set psksecret ',  parameters('adminPassword'), '\n set sync-interface port2\n end\n'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "fortinet",
                        "offer": "fortinet_fortigate-vm_v5",
                        "sku": "[parameters('FortiGateImageSKU')]",
                        "version": "[parameters('FortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('network_NIC_fg21_Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('network_NIC_fg22_Id')]"
                        }
                    ]
                }
            }
        }
    ]
}